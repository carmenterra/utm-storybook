{"version":3,"file":"main.98525aaecf1251727e88.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAHA;;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;AAAA;;AAEA;AACA;AACA;AAFA;AAKA;AAAA;AACA;AACA;AADA;AAIA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDA;AACA;AACA;AAEA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAZA;AAcA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AApBA;AAuBA;AACA;AACA;AACA;AACA;AAJA","sources":["webpack://new-frontend/./src/stories/Button.stories.jsx","webpack://new-frontend/./src/stories/Button.jsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ButtonExport } from './Button';\\n\\nexport default {\\n  title: 'Example/button/default',\\n  component: ButtonExport,\\n  argTypes: {\\n    backgroundColor: { control: 'color' },\\n  },\\n};\\n\\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\\nconst Template = (args) => <ButtonExport {...args} />;\\n\\nexport const Primary = Template.bind({});\\n// More on args: https://storybook.js.org/docs/react/writing-stories/args\\nPrimary.args = {\\n  primary: true,\\n  label: 'Button',\\n};\\n\\nexport const Secondary = Template.bind({});\\nSecondary.args = {\\n  label: 'Button',\\n};\\n\\nexport const Large = Template.bind({});\\nLarge.args = {\\n  size: 'large',\\n  label: 'Button',\\n};\\n\\nexport const Small = Template.bind({});\\nSmall.args = {\\n  size: 'small',\\n  label: 'Button',\\n};\\n\\nexport const active = Template.bind({});\\nactive.args = {\\n  label: 'Button',\\n  backgroundColor: '#5C50BF',\\n};\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":17,\"line\":13},\"endLoc\":{\"col\":53,\"line\":13},\"startBody\":{\"col\":17,\"line\":13},\"endBody\":{\"col\":53,\"line\":13}},\"Secondary\":{\"startLoc\":{\"col\":17,\"line\":13},\"endLoc\":{\"col\":53,\"line\":13},\"startBody\":{\"col\":17,\"line\":13},\"endBody\":{\"col\":53,\"line\":13}},\"Large\":{\"startLoc\":{\"col\":17,\"line\":13},\"endLoc\":{\"col\":53,\"line\":13},\"startBody\":{\"col\":17,\"line\":13},\"endBody\":{\"col\":53,\"line\":13}},\"Small\":{\"startLoc\":{\"col\":17,\"line\":13},\"endLoc\":{\"col\":53,\"line\":13},\"startBody\":{\"col\":17,\"line\":13},\"endBody\":{\"col\":53,\"line\":13}},\"active\":{\"startLoc\":{\"col\":17,\"line\":13},\"endLoc\":{\"col\":53,\"line\":13},\"startBody\":{\"col\":17,\"line\":13},\"endBody\":{\"col\":53,\"line\":13}}};\n    \nimport React from 'react';\nimport { ButtonExport } from './Button';\n\nexport default {\n  title: 'Example/button/default',\n  component: ButtonExport,\n  argTypes: {\n    backgroundColor: { control: 'color' },\n  },\n};\n\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\nconst Template = (args) => <ButtonExport {...args} />;\n\nexport const Primary = Template.bind({});;\n// More on args: https://storybook.js.org/docs/react/writing-stories/args\nPrimary.args = {\n  primary: true,\n  label: 'Button',\n};\n\nexport const Secondary = Template.bind({});;\nSecondary.args = {\n  label: 'Button',\n};\n\nexport const Large = Template.bind({});;\nLarge.args = {\n  size: 'large',\n  label: 'Button',\n};\n\nexport const Small = Template.bind({});;\nSmall.args = {\n  size: 'small',\n  label: 'Button',\n};\n\nexport const active = Template.bind({});\nactive.args = {\n  label: 'Button',\n  backgroundColor: '#5C50BF',\n};\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <ButtonExport {...args} />\" }, ...Primary.parameters };\nSecondary.parameters = { storySource: { source: \"(args) => <ButtonExport {...args} />\" }, ...Secondary.parameters };\nLarge.parameters = { storySource: { source: \"(args) => <ButtonExport {...args} />\" }, ...Large.parameters };\nSmall.parameters = { storySource: { source: \"(args) => <ButtonExport {...args} />\" }, ...Small.parameters };\nactive.parameters = { storySource: { source: \"(args) => <ButtonExport {...args} />\" }, ...active.parameters };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './button.scss';\n\n/**\n * Primary UI component for user interaction\n */\nexport const ButtonExport = ({ primary, backgroundColor, size, label, ...props }) => {\n  const mode = primary ? 'utm-button--primary' : 'utm-button--secondary';\n  return (\n    <button\n      type=\"button\"\n      className={['utm-button', `utm-button--${size}`, mode].join(' ')}\n      style={backgroundColor && { backgroundColor }}\n      {...props}\n    >\n      {label}\n    </button>\n  );\n};\n\nButtonExport.propTypes = {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary: PropTypes.bool,\n  /**\n   * What background color to use\n   */\n  backgroundColor: PropTypes.string,\n  /**\n   * How large should the button be?\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  /**\n   * Button contents\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Optional click handler\n   */\n  onClick: PropTypes.func,\n};\n\nButtonExport.defaultProps = {\n  backgroundColor: null,\n  primary: false,\n  size: 'medium',\n  onClick: undefined,\n};\n"],"names":[],"sourceRoot":""}