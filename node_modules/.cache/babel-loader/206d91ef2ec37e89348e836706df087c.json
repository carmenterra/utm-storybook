{"ast":null,"code":"var _jsxFileName = \"/Users/richards/work/Git/new-frontend/src/stories/PropsTesting.jsx\";\nimport React from 'react';\nimport './propstesting.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Profile(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", { ...props.id,\n          children: [\" \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", { ...props.id,\n          children: [\" \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", { ...props.id[3],\n          children: [\" \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Profile;\n\nconst PropsTesting = _ref => {\n  let {\n    text,\n    backgroundColor,\n    ...props\n  } = _ref;\n  const plofiles = [{\n    id: 1,\n    name: 'AAA'\n  }, {\n    id: 2,\n    name: 'BBB'\n  }, {\n    id: 3,\n    name: 'CCC'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-color\",\n      style: backgroundColor && {\n        backgroundColor\n      },\n      ...props,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: plofiles.map(profile => /*#__PURE__*/_jsxDEV(Profile, {\n        name: profile.name\n      }, profile.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 50\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n};\n\n_c2 = PropsTesting;\nexport default PropsTesting;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Profile\");\n$RefreshReg$(_c2, \"PropsTesting\");","map":{"version":3,"sources":["/Users/richards/work/Git/new-frontend/src/stories/PropsTesting.jsx"],"names":["React","Profile","props","id","name","PropsTesting","text","backgroundColor","plofiles","map","profile"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,sBACE;AAAA,4BACE;AAAA,6BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA,6BACE;AAAA,gCACA,mBAAQA,KAAK,CAACC,EAAd;AAAA,0BAAqBD,KAAK,CAACE,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,mBAAQF,KAAK,CAACC,EAAd;AAAA,0BAAqBD,KAAK,CAACE,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA,mBAAQF,KAAK,CAACC,EAAN,CAAS,CAAT,CAAR;AAAA,0BAAwBD,KAAK,CAACE,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;KAnBQH,O;;AAqBT,MAAMI,YAAY,GAAG,QAAwC;AAAA,MAAvC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,eAAR;AAAyB,OAAGL;AAA5B,GAAuC;AAC3D,QAAMM,QAAQ,GAAG,CACb;AAACL,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GADa,EAEb;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAFa,EAGb;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAHa,CAAjB;AAKK,sBACI;AAAA,4BACG;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAEG,eAAe,IAAI;AAAEA,QAAAA;AAAF,OAApD;AAAA,SACQL,KADR;AAAA,gBAEMI;AAFN;AAAA;AAAA;AAAA;AAAA,YADH,eAKO;AAAA,gBACKE,QAAQ,CAACC,GAAT,CAAcC,OAAD,iBAAa,QAAC,OAAD;AAA0B,QAAA,IAAI,EAAEA,OAAO,CAACN;AAAxC,SAAcM,OAAO,CAACP,EAAtB;AAAA;AAAA;AAAA;AAAA,cAA1B;AADL;AAAA;AAAA;AAAA;AAAA,YALP;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYN,CAlBD;;MAAME,Y;AAqBN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport './propstesting.scss';\n\nfunction Profile(props) {\n  return (\n    <div>\n      <thead>\n        <tr>\n          <th>1</th>\n          <th>2</th>\n          <th>3</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n        <td {...props.id}> { props.name }</td>\n        <td {...props.id}> { props.name }</td>\n        <td {...props.id[3]}> { props.name }</td>\n        </tr>\n      </tbody>\n    </div>\n  )\n}\n\nconst PropsTesting = ({ text, backgroundColor, ...props}) => {\n  const plofiles = [\n      {id: 1, name: 'AAA'},\n      {id: 2, name: 'BBB'},\n      {id: 3, name: 'CCC'}\n    ];\n       return(\n           <div>\n              <div className=\"bg-color\" style={backgroundColor && { backgroundColor }}\n                  {...props}>\n                  { text }\n              </div>\n                  <tr>\n                      {plofiles.map((profile) => <Profile key={profile.id} name={profile.name} />)}\n                  </tr>\n           </div>\n           \n       );\n}\n\n\nexport default PropsTesting;\n"]},"metadata":{},"sourceType":"module"}