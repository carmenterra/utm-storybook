{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar dataMemory = {};\n/** @class */\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {}\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n\n\n  MemoryStorage.setItem = function (key, value) {\n    dataMemory[key] = value;\n    return dataMemory[key];\n  };\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n\n\n  MemoryStorage.getItem = function (key) {\n    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n  };\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n\n\n  MemoryStorage.removeItem = function (key) {\n    return delete dataMemory[key];\n  };\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n\n\n  MemoryStorage.clear = function () {\n    dataMemory = {};\n    return dataMemory;\n  };\n\n  return MemoryStorage;\n}();\n\nexport { MemoryStorage };\n\nvar StorageHelper =\n/** @class */\nfunction () {\n  /**\n   * This is used to get a storage object\n   * @returns {object} the storage\n   */\n  function StorageHelper() {\n    try {\n      this.storageWindow = window.localStorage;\n      this.storageWindow.setItem('aws.amplify.test-ls', 1);\n      this.storageWindow.removeItem('aws.amplify.test-ls');\n    } catch (exception) {\n      this.storageWindow = MemoryStorage;\n    }\n  }\n  /**\n   * This is used to return the storage\n   * @returns {object} the storage\n   */\n\n\n  StorageHelper.prototype.getStorage = function () {\n    return this.storageWindow;\n  };\n\n  return StorageHelper;\n}();\n\nexport { StorageHelper };\n/**\n * @deprecated use named import\n */\n\nexport default StorageHelper;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;AAaA,IAAIA,UAAU,GAAG,EAAjB;AAEA;;AACA;AAAA;AAAA;AAAA,4BAyCC;AAxCA;;;;;;;;AAMOC,0BAAP,UAAeC,GAAf,EAA4BC,KAA5B,EAAsC;AACrCH,cAAU,CAACE,GAAD,CAAV,GAAkBC,KAAlB;AACA,WAAOH,UAAU,CAACE,GAAD,CAAjB;AACA,GAHM;AAKP;;;;;;;;AAMOD,0BAAP,UAAeC,GAAf,EAA0B;AACzB,WAAOE,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCP,UAArC,EAAiDE,GAAjD,IACJF,UAAU,CAACE,GAAD,CADN,GAEJM,SAFH;AAGA,GAJM;AAMP;;;;;;;AAKOP,6BAAP,UAAkBC,GAAlB,EAA6B;AAC5B,WAAO,OAAOF,UAAU,CAACE,GAAD,CAAxB;AACA,GAFM;AAIP;;;;;;AAIOD,wBAAP;AACCD,cAAU,GAAG,EAAb;AACA,WAAOA,UAAP;AACA,GAHM;;AAIR;AAAC,CAzCD;;;;AA2CA;AAAA;AAAA;AAEC;;;;AAIA;AACC,QAAI;AACH,WAAKS,aAAL,GAAqBC,MAAM,CAACC,YAA5B;AACA,WAAKF,aAAL,CAAmBG,OAAnB,CAA2B,qBAA3B,EAAkD,CAAlD;AACA,WAAKH,aAAL,CAAmBI,UAAnB,CAA8B,qBAA9B;AACA,KAJD,CAIE,OAAOC,SAAP,EAAkB;AACnB,WAAKL,aAAL,GAAqBR,aAArB;AACA;AACD;AAED;;;;;;AAIAc;AACC,WAAO,KAAKN,aAAZ;AACA,GAFD;;AAGD;AAAC,CAvBD;;;AAyBA;;;;AAGA,eAAeM,aAAf","names":["dataMemory","MemoryStorage","key","value","Object","prototype","hasOwnProperty","call","undefined","storageWindow","window","localStorage","setItem","removeItem","exception","StorageHelper"],"sources":["/Users/richards/node_modules/@aws-amplify/core/src/StorageHelper/index.ts"],"sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nlet dataMemory = {};\n\n/** @class */\nexport class MemoryStorage {\n\t/**\n\t * This is used to set a specific item in storage\n\t * @param {string} key - the key for the item\n\t * @param {object} value - the value\n\t * @returns {string} value that was set\n\t */\n\tstatic setItem(key: string, value: any) {\n\t\tdataMemory[key] = value;\n\t\treturn dataMemory[key];\n\t}\n\n\t/**\n\t * This is used to get a specific key from storage\n\t * @param {string} key - the key for the item\n\t * This is used to clear the storage\n\t * @returns {string} the data item\n\t */\n\tstatic getItem(key: string) {\n\t\treturn Object.prototype.hasOwnProperty.call(dataMemory, key)\n\t\t\t? dataMemory[key]\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * This is used to remove an item from storage\n\t * @param {string} key - the key being set\n\t * @returns {string} value - value that was deleted\n\t */\n\tstatic removeItem(key: string) {\n\t\treturn delete dataMemory[key];\n\t}\n\n\t/**\n\t * This is used to clear the storage\n\t * @returns {string} nothing\n\t */\n\tstatic clear() {\n\t\tdataMemory = {};\n\t\treturn dataMemory;\n\t}\n}\n\nexport class StorageHelper {\n\tprivate storageWindow: any;\n\t/**\n\t * This is used to get a storage object\n\t * @returns {object} the storage\n\t */\n\tconstructor() {\n\t\ttry {\n\t\t\tthis.storageWindow = window.localStorage;\n\t\t\tthis.storageWindow.setItem('aws.amplify.test-ls', 1);\n\t\t\tthis.storageWindow.removeItem('aws.amplify.test-ls');\n\t\t} catch (exception) {\n\t\t\tthis.storageWindow = MemoryStorage;\n\t\t}\n\t}\n\n\t/**\n\t * This is used to return the storage\n\t * @returns {object} the storage\n\t */\n\tgetStorage(): any {\n\t\treturn this.storageWindow;\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default StorageHelper;\n"]},"metadata":{},"sourceType":"module"}