{"ast":null,"code":"export var convert = function (stream) {\n  if (stream instanceof Blob || stream instanceof ReadableStream) {\n    return new Response(stream).arrayBuffer().then(function (buffer) {\n      return new Uint8Array(buffer);\n    });\n  } else {\n    throw new Error('Readable is not supported.');\n  }\n};","map":{"version":3,"mappings":"AACA,OAAO,IAAMA,OAAO,GAAG,UACtBC,MADsB,EACkB;AAExC,MAAIA,MAAM,YAAYC,IAAlB,IAA0BD,MAAM,YAAYE,cAAhD,EAAgE;AAC/D,WAAO,IAAIC,QAAJ,CAAaH,MAAb,EACLI,WADK,GAELC,IAFK,CAEA,kBAAM;AAAI,iBAAIC,UAAJ,CAAeC,MAAf;AAAsB,KAFhC,CAAP;AAGA,GAJD,MAIO;AACN,UAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;AACA;AACD,CAVM","names":["convert","stream","Blob","ReadableStream","Response","arrayBuffer","then","Uint8Array","buffer","Error"],"sources":["/Users/richards/node_modules/@aws-amplify/interactions/src/Providers/AWSLexProviderHelper/convert.ts"],"sourcesContent":["import { Readable } from 'stream';\nexport const convert = (\n\tstream: Blob | Readable | ReadableStream\n): Promise<Uint8Array> => {\n\tif (stream instanceof Blob || stream instanceof ReadableStream) {\n\t\treturn new Response(stream)\n\t\t\t.arrayBuffer()\n\t\t\t.then(buffer => new Uint8Array(buffer));\n\t} else {\n\t\tthrow new Error('Readable is not supported.');\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}