{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nimport { print, parse, GraphQLError } from 'graphql';\nimport { Amplify, ConsoleLogger as Logger, Constants, Credentials, INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER } from '@aws-amplify/core';\nimport PubSub from '@aws-amplify/pubsub';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { GraphQLAuthError } from './types';\nimport { RestClient } from '@aws-amplify/api-rest';\nvar USER_AGENT_HEADER = 'x-amz-user-agent';\nvar logger = new Logger('GraphQLAPI');\nexport var graphqlOperation = function (query, variables, authToken) {\n  if (variables === void 0) {\n    variables = {};\n  }\n\n  return {\n    query: query,\n    variables: variables,\n    authToken: authToken\n  };\n};\n/**\n * Export Cloud Logic APIs\n */\n\nvar GraphQLAPIClass =\n/** @class */\nfunction () {\n  /**\n   * Initialize GraphQL API with AWS configuration\n   * @param {Object} options - Configuration object for API\n   */\n  function GraphQLAPIClass(options) {\n    this._api = null;\n    this.Auth = Auth;\n    this.Cache = Cache;\n    this.Credentials = Credentials;\n    this._options = options;\n    logger.debug('API Options', this._options);\n  }\n\n  GraphQLAPIClass.prototype.getModuleName = function () {\n    return 'GraphQLAPI';\n  };\n  /**\n   * Configure API\n   * @param {Object} config - Configuration of the API\n   * @return {Object} - The current configuration\n   */\n\n\n  GraphQLAPIClass.prototype.configure = function (options) {\n    var _a = options || {},\n        _b = _a.API,\n        API = _b === void 0 ? {} : _b,\n        otherOptions = __rest(_a, [\"API\"]);\n\n    var opt = __assign(__assign({}, otherOptions), API);\n\n    logger.debug('configure GraphQL API', {\n      opt: opt\n    });\n\n    if (opt['aws_project_region']) {\n      opt = Object.assign({}, opt, {\n        region: opt['aws_project_region'],\n        header: {}\n      });\n    }\n\n    if (typeof opt.graphql_headers !== 'undefined' && typeof opt.graphql_headers !== 'function') {\n      logger.warn('graphql_headers should be a function');\n      opt.graphql_headers = undefined;\n    }\n\n    this._options = Object.assign({}, this._options, opt);\n    this.createInstance();\n    return this._options;\n  };\n  /**\n   * Create an instance of API for the library\n   * @return - A promise of true if Success\n   */\n\n\n  GraphQLAPIClass.prototype.createInstance = function () {\n    logger.debug('create Rest instance');\n\n    if (this._options) {\n      this._api = new RestClient(this._options); // Share instance Credentials with client for SSR\n\n      this._api.Credentials = this.Credentials;\n      return true;\n    } else {\n      return Promise.reject('API not configured');\n    }\n  };\n\n  GraphQLAPIClass.prototype._headerBasedAuth = function (defaultAuthenticationType, additionalHeaders) {\n    if (additionalHeaders === void 0) {\n      additionalHeaders = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, aws_appsync_authenticationType, apiKey, authenticationType, headers, _b, credentialsOK, token, federatedInfo, currentUser, e_1, session, e_2;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this._options, aws_appsync_authenticationType = _a.aws_appsync_authenticationType, apiKey = _a.aws_appsync_apiKey;\n            authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n            headers = {};\n            _b = authenticationType;\n\n            switch (_b) {\n              case 'API_KEY':\n                return [3\n                /*break*/\n                , 1];\n\n              case 'AWS_IAM':\n                return [3\n                /*break*/\n                , 2];\n\n              case 'OPENID_CONNECT':\n                return [3\n                /*break*/\n                , 4];\n\n              case 'AMAZON_COGNITO_USER_POOLS':\n                return [3\n                /*break*/\n                , 11];\n\n              case 'AWS_LAMBDA':\n                return [3\n                /*break*/\n                , 15];\n            }\n\n            return [3\n            /*break*/\n            , 16];\n\n          case 1:\n            if (!apiKey) {\n              throw new Error(GraphQLAuthError.NO_API_KEY);\n            }\n\n            headers = {\n              Authorization: null,\n              'X-Api-Key': apiKey\n            };\n            return [3\n            /*break*/\n            , 17];\n\n          case 2:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 3:\n            credentialsOK = _c.sent();\n\n            if (!credentialsOK) {\n              throw new Error(GraphQLAuthError.NO_CREDENTIALS);\n            }\n\n            return [3\n            /*break*/\n            , 17];\n\n          case 4:\n            _c.trys.push([4, 9,, 10]);\n\n            token = void 0;\n            return [4\n            /*yield*/\n            , Cache.getItem('federatedInfo')];\n\n          case 5:\n            federatedInfo = _c.sent();\n            if (!federatedInfo) return [3\n            /*break*/\n            , 6];\n            token = federatedInfo.token;\n            return [3\n            /*break*/\n            , 8];\n\n          case 6:\n            return [4\n            /*yield*/\n            , Auth.currentAuthenticatedUser()];\n\n          case 7:\n            currentUser = _c.sent();\n\n            if (currentUser) {\n              token = currentUser.token;\n            }\n\n            _c.label = 8;\n\n          case 8:\n            if (!token) {\n              throw new Error(GraphQLAuthError.NO_FEDERATED_JWT);\n            }\n\n            headers = {\n              Authorization: token\n            };\n            return [3\n            /*break*/\n            , 10];\n\n          case 9:\n            e_1 = _c.sent();\n            throw new Error(GraphQLAuthError.NO_CURRENT_USER);\n\n          case 10:\n            return [3\n            /*break*/\n            , 17];\n\n          case 11:\n            _c.trys.push([11, 13,, 14]);\n\n            return [4\n            /*yield*/\n            , this.Auth.currentSession()];\n\n          case 12:\n            session = _c.sent();\n            headers = {\n              Authorization: session.getAccessToken().getJwtToken()\n            };\n            return [3\n            /*break*/\n            , 14];\n\n          case 13:\n            e_2 = _c.sent();\n            throw new Error(GraphQLAuthError.NO_CURRENT_USER);\n\n          case 14:\n            return [3\n            /*break*/\n            , 17];\n\n          case 15:\n            if (!additionalHeaders.Authorization) {\n              throw new Error(GraphQLAuthError.NO_AUTH_TOKEN);\n            }\n\n            headers = {\n              Authorization: additionalHeaders.Authorization\n            };\n            return [3\n            /*break*/\n            , 17];\n\n          case 16:\n            headers = {\n              Authorization: null\n            };\n            return [3\n            /*break*/\n            , 17];\n\n          case 17:\n            return [2\n            /*return*/\n            , headers];\n        }\n      });\n    });\n  };\n  /**\n   * to get the operation type\n   * @param operation\n   */\n\n\n  GraphQLAPIClass.prototype.getGraphqlOperationType = function (operation) {\n    var doc = parse(operation);\n    var definitions = doc.definitions;\n\n    var _a = __read(definitions, 1),\n        operationType = _a[0].operation;\n\n    return operationType;\n  };\n  /**\n   * Executes a GraphQL operation\n   *\n   * @param {GraphQLOptions} GraphQL Options\n   * @param {object} additionalHeaders headers to merge in after any `graphql_headers` set in the config\n   * @returns {Promise<GraphQLResult> | Observable<object>}\n   */\n\n\n  GraphQLAPIClass.prototype.graphql = function (_a, additionalHeaders) {\n    var paramQuery = _a.query,\n        _b = _a.variables,\n        variables = _b === void 0 ? {} : _b,\n        authMode = _a.authMode,\n        authToken = _a.authToken;\n    var query = typeof paramQuery === 'string' ? parse(paramQuery) : parse(print(paramQuery));\n\n    var _c = __read(query.definitions.filter(function (def) {\n      return def.kind === 'OperationDefinition';\n    }), 1),\n        _d = _c[0],\n        operationDef = _d === void 0 ? {} : _d;\n\n    var operationType = operationDef.operation;\n    var headers = additionalHeaders || {}; // if an authorization header is set, have the explicit authToken take precedence\n\n    if (authToken) {\n      headers.Authorization = authToken;\n    }\n\n    switch (operationType) {\n      case 'query':\n      case 'mutation':\n        var cancellableToken = this._api.getCancellableToken();\n\n        var initParams = {\n          cancellableToken: cancellableToken\n        };\n\n        var responsePromise = this._graphql({\n          query: query,\n          variables: variables,\n          authMode: authMode\n        }, headers, initParams);\n\n        this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n        return responsePromise;\n\n      case 'subscription':\n        return this._graphqlSubscribe({\n          query: query,\n          variables: variables,\n          authMode: authMode\n        }, headers);\n    }\n\n    throw new Error(\"invalid operation type: \" + operationType);\n  };\n\n  GraphQLAPIClass.prototype._graphql = function (_a, additionalHeaders, initParams) {\n    var query = _a.query,\n        variables = _a.variables,\n        authMode = _a.authMode;\n\n    if (additionalHeaders === void 0) {\n      additionalHeaders = {};\n    }\n\n    if (initParams === void 0) {\n      initParams = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _b, region, appSyncGraphqlEndpoint, _c, graphql_headers, customGraphqlEndpoint, customEndpointRegion, headers, _d, _e, _f, _g, _h, _j, body, init, endpoint, error, response, err_1, errors;\n\n      var _k;\n\n      return __generator(this, function (_l) {\n        switch (_l.label) {\n          case 0:\n            if (!!this._api) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.createInstance()];\n\n          case 1:\n            _l.sent();\n\n            _l.label = 2;\n\n          case 2:\n            _b = this._options, region = _b.aws_appsync_region, appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint, _c = _b.graphql_headers, graphql_headers = _c === void 0 ? function () {\n              return {};\n            } : _c, customGraphqlEndpoint = _b.graphql_endpoint, customEndpointRegion = _b.graphql_endpoint_iam_region;\n            _d = [{}];\n            _e = !customGraphqlEndpoint;\n            if (!_e) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , this._headerBasedAuth(authMode, additionalHeaders)];\n\n          case 3:\n            _e = _l.sent();\n            _l.label = 4;\n\n          case 4:\n            _f = [__assign.apply(void 0, _d.concat([_e]))];\n            _g = customGraphqlEndpoint;\n            if (!_g) return [3\n            /*break*/\n            , 8];\n            if (!customEndpointRegion) return [3\n            /*break*/\n            , 6];\n            return [4\n            /*yield*/\n            , this._headerBasedAuth(authMode, additionalHeaders)];\n\n          case 5:\n            _h = _l.sent();\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            _h = {\n              Authorization: null\n            };\n            _l.label = 7;\n\n          case 7:\n            _g = _h;\n            _l.label = 8;\n\n          case 8:\n            _j = [__assign.apply(void 0, _f.concat([_g]))];\n            return [4\n            /*yield*/\n            , graphql_headers({\n              query: query,\n              variables: variables\n            })];\n\n          case 9:\n            headers = __assign.apply(void 0, [__assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), additionalHeaders]), !customGraphqlEndpoint && (_k = {}, _k[USER_AGENT_HEADER] = Constants.userAgent, _k)]);\n            body = {\n              query: print(query),\n              variables: variables\n            };\n            init = Object.assign({\n              headers: headers,\n              body: body,\n              signerServiceInfo: {\n                service: !customGraphqlEndpoint ? 'appsync' : 'execute-api',\n                region: !customGraphqlEndpoint ? region : customEndpointRegion\n              }\n            }, initParams);\n            endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\n\n            if (!endpoint) {\n              error = new GraphQLError('No graphql endpoint provided.');\n              throw {\n                data: {},\n                errors: [error]\n              };\n            }\n\n            _l.label = 10;\n\n          case 10:\n            _l.trys.push([10, 12,, 13]);\n\n            return [4\n            /*yield*/\n            , this._api.post(endpoint, init)];\n\n          case 11:\n            response = _l.sent();\n            return [3\n            /*break*/\n            , 13];\n\n          case 12:\n            err_1 = _l.sent(); // If the exception is because user intentionally\n            // cancelled the request, do not modify the exception\n            // so that clients can identify the exception correctly.\n\n            if (this._api.isCancel(err_1)) {\n              throw err_1;\n            }\n\n            response = {\n              data: {},\n              errors: [new GraphQLError(err_1.message, null, null, null, null, err_1)]\n            };\n            return [3\n            /*break*/\n            , 13];\n\n          case 13:\n            errors = response.errors;\n\n            if (errors && errors.length) {\n              throw response;\n            }\n\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n  /**\n   * Checks to see if an error thrown is from an api request cancellation\n   * @param {any} error - Any error\n   * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n   */\n\n\n  GraphQLAPIClass.prototype.isCancel = function (error) {\n    return this._api.isCancel(error);\n  };\n  /**\n   * Cancels an inflight request. Only applicable for graphql queries and mutations\n   * @param {any} request - request to cancel\n   * @return {boolean} - A boolean indicating if the request was cancelled\n   */\n\n\n  GraphQLAPIClass.prototype.cancel = function (request, message) {\n    return this._api.cancel(request, message);\n  };\n\n  GraphQLAPIClass.prototype._graphqlSubscribe = function (_a, additionalHeaders) {\n    var query = _a.query,\n        variables = _a.variables,\n        defaultAuthenticationType = _a.authMode,\n        authToken = _a.authToken;\n\n    if (additionalHeaders === void 0) {\n      additionalHeaders = {};\n    }\n\n    var _b = this._options,\n        region = _b.aws_appsync_region,\n        appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint,\n        aws_appsync_authenticationType = _b.aws_appsync_authenticationType,\n        apiKey = _b.aws_appsync_apiKey,\n        _c = _b.graphql_headers,\n        graphql_headers = _c === void 0 ? function () {\n      return {};\n    } : _c;\n    var authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n\n    if (PubSub && typeof PubSub.subscribe === 'function') {\n      return PubSub.subscribe('', {\n        provider: INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n        appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,\n        authenticationType: authenticationType,\n        apiKey: apiKey,\n        query: print(query),\n        region: region,\n        variables: variables,\n        graphql_headers: graphql_headers,\n        additionalHeaders: additionalHeaders,\n        authToken: authToken\n      });\n    } else {\n      logger.debug('No pubsub module applied for subscription');\n      throw new Error('No pubsub module applied for subscription');\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  GraphQLAPIClass.prototype._ensureCredentials = function () {\n    var _this = this;\n\n    return this.Credentials.get().then(function (credentials) {\n      if (!credentials) return false;\n\n      var cred = _this.Credentials.shear(credentials);\n\n      logger.debug('set credentials for api', cred);\n      return true;\n    }).catch(function (err) {\n      logger.warn('ensure credentials error', err);\n      return false;\n    });\n  };\n\n  return GraphQLAPIClass;\n}();\n\nexport { GraphQLAPIClass };\nexport var GraphQLAPI = new GraphQLAPIClass(null);\nAmplify.register(GraphQLAPI);","map":{"version":3,"mappings":"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","names":["print","parse","GraphQLError","Amplify","ConsoleLogger","Logger","Constants","Credentials","INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER","PubSub","Auth","Cache","GraphQLAuthError","RestClient","USER_AGENT_HEADER","logger","graphqlOperation","query","variables","authToken","options","_options","debug","GraphQLAPIClass","_a","_b","API","otherOptions","opt","Object","assign","region","header","graphql_headers","warn","undefined","createInstance","_api","Promise","reject","defaultAuthenticationType","additionalHeaders","aws_appsync_authenticationType","apiKey","authenticationType","headers","Error","NO_API_KEY","Authorization","_ensureCredentials","credentialsOK","_c","NO_CREDENTIALS","token","getItem","federatedInfo","currentAuthenticatedUser","currentUser","NO_FEDERATED_JWT","NO_CURRENT_USER","currentSession","session","getAccessToken","getJwtToken","NO_AUTH_TOKEN","operation","doc","definitions","operationType","paramQuery","authMode","_d","operationDef","cancellableToken","getCancellableToken","initParams","responsePromise","_graphql","updateRequestToBeCancellable","_graphqlSubscribe","_l","appSyncGraphqlEndpoint","customGraphqlEndpoint","customEndpointRegion","_e","_headerBasedAuth","_g","_h","_k","userAgent","body","init","signerServiceInfo","service","endpoint","error","data","errors","post","response","isCancel","err_1","message","length","request","cancel","subscribe","provider","get","then","credentials","cred","_this","shear","catch","err","GraphQLAPI","register"],"sources":["/Users/richards/node_modules/@aws-amplify/api-graphql/src/GraphQLAPI.ts"],"sourcesContent":["/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport {\n\tDocumentNode,\n\tOperationDefinitionNode,\n\tprint,\n\tparse,\n\tGraphQLError,\n} from 'graphql';\nimport Observable from 'zen-observable-ts';\nimport {\n\tAmplify,\n\tConsoleLogger as Logger,\n\tConstants,\n\tCredentials,\n\tINTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n} from '@aws-amplify/core';\nimport PubSub from '@aws-amplify/pubsub';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { GraphQLAuthError, GraphQLOptions, GraphQLResult } from './types';\nimport { RestClient } from '@aws-amplify/api-rest';\nconst USER_AGENT_HEADER = 'x-amz-user-agent';\n\nconst logger = new Logger('GraphQLAPI');\n\nexport const graphqlOperation = (\n\tquery,\n\tvariables = {},\n\tauthToken?: string\n) => ({\n\tquery,\n\tvariables,\n\tauthToken,\n});\n\n/**\n * Export Cloud Logic APIs\n */\nexport class GraphQLAPIClass {\n\t/**\n\t * @private\n\t */\n\tprivate _options;\n\tprivate _api = null;\n\n\tAuth = Auth;\n\tCache = Cache;\n\tCredentials = Credentials;\n\n\t/**\n\t * Initialize GraphQL API with AWS configuration\n\t * @param {Object} options - Configuration object for API\n\t */\n\tconstructor(options) {\n\t\tthis._options = options;\n\t\tlogger.debug('API Options', this._options);\n\t}\n\n\tpublic getModuleName() {\n\t\treturn 'GraphQLAPI';\n\t}\n\n\t/**\n\t * Configure API\n\t * @param {Object} config - Configuration of the API\n\t * @return {Object} - The current configuration\n\t */\n\tconfigure(options) {\n\t\tconst { API = {}, ...otherOptions } = options || {};\n\t\tlet opt = { ...otherOptions, ...API };\n\t\tlogger.debug('configure GraphQL API', { opt });\n\n\t\tif (opt['aws_project_region']) {\n\t\t\topt = Object.assign({}, opt, {\n\t\t\t\tregion: opt['aws_project_region'],\n\t\t\t\theader: {},\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\ttypeof opt.graphql_headers !== 'undefined' &&\n\t\t\ttypeof opt.graphql_headers !== 'function'\n\t\t) {\n\t\t\tlogger.warn('graphql_headers should be a function');\n\t\t\topt.graphql_headers = undefined;\n\t\t}\n\n\t\tthis._options = Object.assign({}, this._options, opt);\n\n\t\tthis.createInstance();\n\n\t\treturn this._options;\n\t}\n\n\t/**\n\t * Create an instance of API for the library\n\t * @return - A promise of true if Success\n\t */\n\tcreateInstance() {\n\t\tlogger.debug('create Rest instance');\n\t\tif (this._options) {\n\t\t\tthis._api = new RestClient(this._options);\n\t\t\t// Share instance Credentials with client for SSR\n\t\t\tthis._api.Credentials = this.Credentials;\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn Promise.reject('API not configured');\n\t\t}\n\t}\n\n\tprivate async _headerBasedAuth(\n\t\tdefaultAuthenticationType?,\n\t\tadditionalHeaders: { [key: string]: string } = {}\n\t) {\n\t\tconst {\n\t\t\taws_appsync_authenticationType,\n\t\t\taws_appsync_apiKey: apiKey,\n\t\t} = this._options;\n\t\tconst authenticationType =\n\t\t\tdefaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n\t\tlet headers = {};\n\n\t\tswitch (authenticationType) {\n\t\t\tcase 'API_KEY':\n\t\t\t\tif (!apiKey) {\n\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_API_KEY);\n\t\t\t\t}\n\t\t\t\theaders = {\n\t\t\t\t\tAuthorization: null,\n\t\t\t\t\t'X-Api-Key': apiKey,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 'AWS_IAM':\n\t\t\t\tconst credentialsOK = await this._ensureCredentials();\n\t\t\t\tif (!credentialsOK) {\n\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_CREDENTIALS);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'OPENID_CONNECT':\n\t\t\t\ttry {\n\t\t\t\t\tlet token;\n\t\t\t\t\t// backwards compatibility\n\t\t\t\t\tconst federatedInfo = await Cache.getItem('federatedInfo');\n\t\t\t\t\tif (federatedInfo) {\n\t\t\t\t\t\ttoken = federatedInfo.token;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst currentUser = await Auth.currentAuthenticatedUser();\n\t\t\t\t\t\tif (currentUser) {\n\t\t\t\t\t\t\ttoken = currentUser.token;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!token) {\n\t\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_FEDERATED_JWT);\n\t\t\t\t\t}\n\t\t\t\t\theaders = {\n\t\t\t\t\t\tAuthorization: token,\n\t\t\t\t\t};\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_CURRENT_USER);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'AMAZON_COGNITO_USER_POOLS':\n\t\t\t\ttry {\n\t\t\t\t\tconst session = await this.Auth.currentSession();\n\t\t\t\t\theaders = {\n\t\t\t\t\t\tAuthorization: session.getAccessToken().getJwtToken(),\n\t\t\t\t\t};\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_CURRENT_USER);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'AWS_LAMBDA':\n\t\t\t\tif (!additionalHeaders.Authorization) {\n\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_AUTH_TOKEN);\n\t\t\t\t}\n\t\t\t\theaders = {\n\t\t\t\t\tAuthorization: additionalHeaders.Authorization,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\theaders = {\n\t\t\t\t\tAuthorization: null,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn headers;\n\t}\n\n\t/**\n\t * to get the operation type\n\t * @param operation\n\t */\n\tgetGraphqlOperationType(operation) {\n\t\tconst doc = parse(operation);\n\t\tconst definitions = doc.definitions as ReadonlyArray<\n\t\t\tOperationDefinitionNode\n\t\t>;\n\t\tconst [{ operation: operationType }] = definitions;\n\n\t\treturn operationType;\n\t}\n\n\t/**\n\t * Executes a GraphQL operation\n\t *\n\t * @param {GraphQLOptions} GraphQL Options\n\t * @param {object} additionalHeaders headers to merge in after any `graphql_headers` set in the config\n\t * @returns {Promise<GraphQLResult> | Observable<object>}\n\t */\n\tgraphql(\n\t\t{ query: paramQuery, variables = {}, authMode, authToken }: GraphQLOptions,\n\t\tadditionalHeaders?: { [key: string]: string }\n\t) {\n\t\tconst query =\n\t\t\ttypeof paramQuery === 'string'\n\t\t\t\t? parse(paramQuery)\n\t\t\t\t: parse(print(paramQuery));\n\n\t\tconst [operationDef = {}] = query.definitions.filter(\n\t\t\tdef => def.kind === 'OperationDefinition'\n\t\t);\n\t\tconst {\n\t\t\toperation: operationType,\n\t\t} = operationDef as OperationDefinitionNode;\n\n\t\tconst headers = additionalHeaders || {};\n\n\t\t// if an authorization header is set, have the explicit authToken take precedence\n\t\tif (authToken) {\n\t\t\theaders.Authorization = authToken;\n\t\t}\n\n\t\tswitch (operationType) {\n\t\t\tcase 'query':\n\t\t\tcase 'mutation':\n\t\t\t\tconst cancellableToken = this._api.getCancellableToken();\n\t\t\t\tconst initParams = { cancellableToken };\n\t\t\t\tconst responsePromise = this._graphql(\n\t\t\t\t\t{ query, variables, authMode },\n\t\t\t\t\theaders,\n\t\t\t\t\tinitParams\n\t\t\t\t);\n\t\t\t\tthis._api.updateRequestToBeCancellable(\n\t\t\t\t\tresponsePromise,\n\t\t\t\t\tcancellableToken\n\t\t\t\t);\n\t\t\t\treturn responsePromise;\n\t\t\tcase 'subscription':\n\t\t\t\treturn this._graphqlSubscribe({ query, variables, authMode }, headers);\n\t\t}\n\n\t\tthrow new Error(`invalid operation type: ${operationType}`);\n\t}\n\n\tprivate async _graphql(\n\t\t{ query, variables, authMode }: GraphQLOptions,\n\t\tadditionalHeaders = {},\n\t\tinitParams = {}\n\t): Promise<GraphQLResult> {\n\t\tif (!this._api) {\n\t\t\tawait this.createInstance();\n\t\t}\n\n\t\tconst {\n\t\t\taws_appsync_region: region,\n\t\t\taws_appsync_graphqlEndpoint: appSyncGraphqlEndpoint,\n\t\t\tgraphql_headers = () => ({}),\n\t\t\tgraphql_endpoint: customGraphqlEndpoint,\n\t\t\tgraphql_endpoint_iam_region: customEndpointRegion,\n\t\t} = this._options;\n\n\t\tconst headers = {\n\t\t\t...(!customGraphqlEndpoint &&\n\t\t\t\t(await this._headerBasedAuth(authMode, additionalHeaders))),\n\t\t\t...(customGraphqlEndpoint &&\n\t\t\t\t(customEndpointRegion\n\t\t\t\t\t? await this._headerBasedAuth(authMode, additionalHeaders)\n\t\t\t\t\t: { Authorization: null })),\n\t\t\t...(await graphql_headers({ query, variables })),\n\t\t\t...additionalHeaders,\n\t\t\t...(!customGraphqlEndpoint && {\n\t\t\t\t[USER_AGENT_HEADER]: Constants.userAgent,\n\t\t\t}),\n\t\t};\n\n\t\tconst body = {\n\t\t\tquery: print(query as DocumentNode),\n\t\t\tvariables,\n\t\t};\n\n\t\tconst init = Object.assign(\n\t\t\t{\n\t\t\t\theaders,\n\t\t\t\tbody,\n\t\t\t\tsignerServiceInfo: {\n\t\t\t\t\tservice: !customGraphqlEndpoint ? 'appsync' : 'execute-api',\n\t\t\t\t\tregion: !customGraphqlEndpoint ? region : customEndpointRegion,\n\t\t\t\t},\n\t\t\t},\n\t\t\tinitParams\n\t\t);\n\n\t\tconst endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\n\n\t\tif (!endpoint) {\n\t\t\tconst error = new GraphQLError('No graphql endpoint provided.');\n\n\t\t\tthrow {\n\t\t\t\tdata: {},\n\t\t\t\terrors: [error],\n\t\t\t};\n\t\t}\n\n\t\tlet response;\n\t\ttry {\n\t\t\tresponse = await this._api.post(endpoint, init);\n\t\t} catch (err) {\n\t\t\t// If the exception is because user intentionally\n\t\t\t// cancelled the request, do not modify the exception\n\t\t\t// so that clients can identify the exception correctly.\n\t\t\tif (this._api.isCancel(err)) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tresponse = {\n\t\t\t\tdata: {},\n\t\t\t\terrors: [new GraphQLError(err.message, null, null, null, null, err)],\n\t\t\t};\n\t\t}\n\n\t\tconst { errors } = response;\n\n\t\tif (errors && errors.length) {\n\t\t\tthrow response;\n\t\t}\n\n\t\treturn response;\n\t}\n\n\t/**\n\t * Checks to see if an error thrown is from an api request cancellation\n\t * @param {any} error - Any error\n\t * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n\t */\n\tisCancel(error) {\n\t\treturn this._api.isCancel(error);\n\t}\n\n\t/**\n\t * Cancels an inflight request. Only applicable for graphql queries and mutations\n\t * @param {any} request - request to cancel\n\t * @return {boolean} - A boolean indicating if the request was cancelled\n\t */\n\tcancel(request: Promise<any>, message?: string) {\n\t\treturn this._api.cancel(request, message);\n\t}\n\n\tprivate _graphqlSubscribe(\n\t\t{\n\t\t\tquery,\n\t\t\tvariables,\n\t\t\tauthMode: defaultAuthenticationType,\n\t\t\tauthToken,\n\t\t}: GraphQLOptions,\n\t\tadditionalHeaders = {}\n\t): Observable<any> {\n\t\tconst {\n\t\t\taws_appsync_region: region,\n\t\t\taws_appsync_graphqlEndpoint: appSyncGraphqlEndpoint,\n\t\t\taws_appsync_authenticationType,\n\t\t\taws_appsync_apiKey: apiKey,\n\t\t\tgraphql_headers = () => ({}),\n\t\t} = this._options;\n\t\tconst authenticationType =\n\t\t\tdefaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n\n\t\tif (PubSub && typeof PubSub.subscribe === 'function') {\n\t\t\treturn PubSub.subscribe('', {\n\t\t\t\tprovider: INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n\t\t\t\tappSyncGraphqlEndpoint,\n\t\t\t\tauthenticationType,\n\t\t\t\tapiKey,\n\t\t\t\tquery: print(query as DocumentNode),\n\t\t\t\tregion,\n\t\t\t\tvariables,\n\t\t\t\tgraphql_headers,\n\t\t\t\tadditionalHeaders,\n\t\t\t\tauthToken,\n\t\t\t});\n\t\t} else {\n\t\t\tlogger.debug('No pubsub module applied for subscription');\n\t\t\tthrow new Error('No pubsub module applied for subscription');\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_ensureCredentials() {\n\t\treturn this.Credentials.get()\n\t\t\t.then(credentials => {\n\t\t\t\tif (!credentials) return false;\n\t\t\t\tconst cred = this.Credentials.shear(credentials);\n\t\t\t\tlogger.debug('set credentials for api', cred);\n\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tlogger.warn('ensure credentials error', err);\n\t\t\t\treturn false;\n\t\t\t});\n\t}\n}\n\nexport const GraphQLAPI = new GraphQLAPIClass(null);\nAmplify.register(GraphQLAPI);\n"]},"metadata":{},"sourceType":"module"}